// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProcessorInfo.Repository.Data;

#nullable disable

namespace ProcessorInfo.Repository.Migrations
{
    [DbContext(typeof(ProcessorInfoDbContext))]
    [Migration("20240113202729_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProcessorInfo.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("ProcessorInfo.Models.Chipset", b =>
                {
                    b.Property<int>("ChipsetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChipsetId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ChipsetId");

                    b.ToTable("Chipset");
                });

            modelBuilder.Entity("ProcessorInfo.Models.Processor", b =>
                {
                    b.Property<int>("ProcessorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("processor_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcessorId"), 1L, 1);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<double>("Cache")
                        .HasColumnType("float");

                    b.Property<int>("ChipsetId")
                        .HasColumnType("int");

                    b.Property<double>("EfficencyCores")
                        .HasColumnType("float");

                    b.Property<bool>("IntegratedGraphics")
                        .HasColumnType("bit");

                    b.Property<double>("MaxTurboFrequency")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("PerformanceCores")
                        .HasColumnType("float");

                    b.Property<int>("TotalThreads")
                        .HasColumnType("int");

                    b.HasKey("ProcessorId");

                    b.HasIndex("BrandId");

                    b.HasIndex("ChipsetId");

                    b.ToTable("Processor");
                });

            modelBuilder.Entity("ProcessorInfo.Models.Processor", b =>
                {
                    b.HasOne("ProcessorInfo.Models.Brand", "Brand")
                        .WithMany("Processors")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProcessorInfo.Models.Chipset", "Chipset")
                        .WithMany("Processors")
                        .HasForeignKey("ChipsetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Chipset");
                });

            modelBuilder.Entity("ProcessorInfo.Models.Brand", b =>
                {
                    b.Navigation("Processors");
                });

            modelBuilder.Entity("ProcessorInfo.Models.Chipset", b =>
                {
                    b.Navigation("Processors");
                });
#pragma warning restore 612, 618
        }
    }
}
